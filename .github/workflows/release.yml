# SPDX-License-Identifier: Apache-2.0
name: Release on staging → main merge

on:
  pull_request:
    types:
      - closed
    branches:
      - main
  workflow_dispatch:
    inputs:
      version:
        description: Version to release (e.g., 1.2.3)
        required: true

permissions:
  contents: write

jobs:
  release:
    if: (github.event_name == 'pull_request' && github.event.pull_request.merged == true && github.event.pull_request.head.ref == 'staging') || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Determine version
        id: get_version
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            VERSION='${{ inputs.version }}'
          else
            VERSION=$(grep -Po '^(?=version\s*=)version\s*=\s*"\K[^"]+' pyproject.toml)
          fi
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"

      - name: Ensure version bump (tag must not exist)
        run: |
          if git ls-remote --tags origin | grep -q "refs/tags/v${{ steps.get_version.outputs.version }}$"; then
            echo "❌ Version v${{ steps.get_version.outputs.version }} already exists. Please bump version in pyproject.toml before merging."
            exit 1
          fi

      - name: Create and push Git tag
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git tag v${{ steps.get_version.outputs.version }}
          git push origin v${{ steps.get_version.outputs.version }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.get_version.outputs.version }}
          name: Release v${{ steps.get_version.outputs.version }}
          body: |
            ## ${{ github.event.pull_request.title }}
            ${{ github.event.pull_request.body }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
