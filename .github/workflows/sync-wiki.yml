# SPDX-License-Identifier: Apache-2.0
name: Sync Wiki to Docs

on:
  push:
    branches:
      - "**"          # Run on all branches
  pull_request:        # Ensure PR builds include wiki
  schedule:
    - cron: "0 6 * * *"  # Daily sync at 6 AM UTC
  workflow_dispatch:    # Manual trigger

permissions:
  contents: write  # Needed to create branches/commits
  pull-requests: write  # Needed to open PRs

jobs:
  sync-wiki:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout main repo
        uses: actions/checkout@v4
        with:
          path: main

      - name: Checkout wiki repo
        uses: actions/checkout@v4
        with:
          repository: ${{ github.repository }}.wiki
          path: wiki

      - name: Ensure 'automerge' label exists
        uses: actions/github-script@v7
        with:
          script: |
            const name = 'automerge';
            const color = '0e8a16';
            const description = 'Auto-merge PRs created by sync-wiki workflow';
            try {
              await github.rest.issues.getLabel({
                owner: context.repo.owner,
                repo: context.repo.repo,
                name,
              });
            } catch (e) {
              if (e.status === 404) {
                await github.rest.issues.createLabel({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  name,
                  color,
                  description,
                });
              } else {
                throw e;
              }
            }

      - name: Sync wiki into docs/source/wiki
        run: |
          # Ensure no nested .git remains from previous runs
          if [ -d main/docs/source/wiki ]; then
            find main/docs/source/wiki -name .git -type d -prune -exec rm -rf {} + || true
          fi
          # Mirror wiki contents but exclude the wiki's .git directory
          rsync -av --delete --exclude '.git' wiki/ main/docs/source/wiki/

      - name: Create PR with synced wiki (DCO sign-off)
        id: cpr
        uses: peter-evans/create-pull-request@v6
        with:
          path: main
          base: main
          branch: ci/sync-wiki
          delete-branch: true
          title: "chore(docs): sync wiki into docs/source/wiki"
          body: |
            Automated wiki sync from GitHub Wiki to docs/source/wiki.

            This commit includes a DCO Signed-off-by trailer to satisfy enforcement.
          commit-message: "chore(docs): sync wiki into docs/source/wiki"
          signoff: true
          committer: github-actions[bot] <github-actions[bot]@users.noreply.github.com>
          author: github-actions[bot] <github-actions[bot]@users.noreply.github.com>
          labels: |
            automerge

      - name: Check for 'automerge' label on PR
        id: check_automerge_label
        if: steps.cpr.outputs.pull-request-number
        uses: actions/github-script@v7
        with:
          script: |
            const prNumber = Number(`${{ steps.cpr.outputs['pull-request-number'] }}`);
            if (!prNumber) {
              core.setOutput('has', 'false');
            } else {
              const { data: issue } = await github.rest.issues.get({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: prNumber,
              });
              const labels = issue.labels || [];
              const has = labels.some(l => (typeof l === 'string' ? l === 'automerge' : l.name === 'automerge'));
              core.setOutput('has', has ? 'true' : 'false');
            }

      - name: Enable auto-merge for sync PR
        if: steps.cpr.outputs.pull-request-number && steps.check_automerge_label.outputs.has == 'true'
        uses: peter-evans/enable-pull-request-automerge@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          pull-request-number: ${{ steps.cpr.outputs.pull-request-number }}
          merge-method: squash
