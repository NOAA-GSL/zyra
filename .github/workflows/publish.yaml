name: Publish to PyPI

on:
  push:
    tags:
      - 'v*'
  
  release:
    types: [published]
  # Allow manual runs if needed
  workflow_dispatch:

concurrency:
  group: pypi-publish-${{ github.ref }}
  cancel-in-progress: true

jobs:
  publish:
    name: Publish
    # Run when either: push tag refs/tags/v* OR release tag_name starts with v
    if: startsWith(github.ref, 'refs/tags/v') || startsWith(github.event.release.tag_name || '', 'v')
    runs-on: ubuntu-latest

    environment:
      name: release
      url: https://pypi.org/project/zyra/

    permissions:
      contents: read
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          # For release event, check out the release tag; for tag push, github.ref already points to the tag
          ref: ${{ github.event.release.tag_name || github.ref }}
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Cache Poetry
        uses: actions/cache@v4
        with:
          path: ~/.cache/pypoetry
          key: poetry-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
          restore-keys: poetry-${{ runner.os }}-

      - name: Determine version
        id: version
        run: |
          FORCE_VERSION="${{ github.event.inputs.force_version }}"
          if [ -n "$FORCE_VERSION" ]; then
            echo "Using manually provided version: $FORCE_VERSION"
            echo "version=$FORCE_VERSION" >> $GITHUB_OUTPUT
          else
            VERSION="$(poetry version -s)"
            echo "Detected version from pyproject.toml: $VERSION"
            echo "version=$VERSION" >> $GITHUB_OUTPUT
          fi

      - name: Ensure tag matches version (only for tag builds)
        if: startsWith(github.ref, 'refs/tags/')
        run: |

          TAG_INPUT="${GITHUB_REF#refs/tags/}"
          # Prefer release tag_name if present
          if [ -n "${{ github.event.release.tag_name }}" ]; then
            TAG_INPUT="${{ github.event.release.tag_name }}"
          fi
          TAG="$TAG_INPUT"
          VERSION="v$(poetry version -s)"
          echo "Detected TAG=$TAG, pyproject version=$VERSION"

          if [ "$TAG" != "$VERSION" ]; then
            echo "Tag $TAG does not match project version $VERSION"
            exit 1
          fi

      - name: Clean build directories
        run: rm -rf dist build *.egg-info

      - name: Build package
        run: poetry build

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          skip-existing: true
          packages-dir: dist/
          password: ${{ secrets.PYPI_API_TOKEN }}
